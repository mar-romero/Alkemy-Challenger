{
	"info": {
		"_postman_id": "e18aeecd-7d17-4ef9-8f67-966a3c1dc268",
		"name": "Alkemy",
		"description": "Es la primera vez que documento una api con postman, espero realizarlo bien y ser bien claro.  \n  \nSe utilizo los servidores de MySQL de HEROKU para que puedan utilizar la api, sin tener que implementar todos par√°metros de la base de datos y solo con postan puedan utilizarla.\n\nCada carpeta tiene documentado su funcionamiento.\n\nUna ves loggeado se va a generar un token que se guardo en una variable local de postman para no tener que insertar el token en headers y poder ver su funcionamiento.\n\nLa API devuelve todos los pedidos por JSON.\n\nPara iniciar la app Se inicia con npm run dev.\n\nSe utilizaron las siguientes dependencias:\n\nStartFragment\n\n@sendgrid/mail: 7.6.2\n\naws-sdk: 2.1137.0\n\nbcrypt: 5.0.1\n\ndate-fns: 2.28.0\n\ndotenv: 9.0.2\n\nexpress : 4.17.1\n\nexpress-validator: 6.11.1\n\njsonwebtoken: 8.5.1\n\nmorgan: 1.10.0\n\nmulter: 1.4.4\"\n\nmysql2: 2.3.3\n\nnodemailer: 6.7.5\n\nnodemailer-sendgrid: 1.0.3\n\nsequelize: 6.19.0\n\nnodemon: 2.0.7",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "Get ALL",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://localhost:3000/api/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.environment.set(\"token\", jsonData.data.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"ezequiel@marcelo.com\",\r\n    \"password\":\"123456\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Save User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"marcelo\",\r\n    \"email\":\"1@marcelo.com\",\r\n    \"password\":\"123456\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Registro",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"marcelo.romero91@gmail.com\",\r\n    \"password\":\"123456\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/auth/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://localhost:3000/api/users/194",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"194"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"ezequiel\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/users/44",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"44"
							]
						}
					},
					"response": []
				}
			],
			"description": "Contiene todos los ENDPOINT de Users\n\nGet ALL: muestra todos los usuarios creados y solamente puede obtenerlo el usuario admin que este rol solo se le puede dar desde la base de datos.\n\nLogin: es para poder loggearte en la api\n\nSave User: solamente lo puede hacer el admin y una vez loggeado puede usar este ENDPOINT\n\nRegistro: pueden registraste todos los usuarios correspondientes y le llegara via mail un registro exitoso cuando lo complete gracias a SendGrid\n\nDelete: Elimina un usuario solamente lo puede hacer el admin\n\nUpdate: el admin puede modificar todos los usuarios pero el usuario solo puede modificar su registro"
		},
		{
			"name": "Character",
			"item": [
				{
					"name": "Associate",
					"item": [
						{
							"name": "Associate",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/api/characters/84/movies/34",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"characters",
										"84",
										"movies",
										"34"
									],
									"query": [
										{
											"key": null,
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Save Character",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Mickey Mouse\",\r\n    \"age\":11,\r\n    \"history\":\"Disney\",\r\n    \"weigth\":45\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/characters",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"characters"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get ALL character",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://localhost:3000/api/characters",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"characters"
							],
							"query": [
								{
									"key": "filter[name]",
									"value": "a",
									"disabled": true
								},
								{
									"key": "filter[age]",
									"value": "48",
									"disabled": true
								},
								{
									"key": "filter[weithg]",
									"value": "100",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get character",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://localhost:3000/api/characters/34",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"characters",
								"34"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete character",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://localhost:3000/api/characters/164",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"characters",
								"164"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Characters",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"age\":25\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/characters/154",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"characters",
								"154"
							],
							"query": [
								{
									"key": null,
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "EL token generado una vez que te loggeas como comente se guarda autom√°ticamente no es necesario insertarlo en ning√∫n lado, los ID que quieran ver los tienen que indicar por medio de los endpoint\n\nLas asociaciones las realiza el admin una vez creado los personajes y peliculas.\n\nSave Character: sirve para poder salvar los personajes deseados, los par√°metros obligatorios que se env√≠an por Body son el nombre y la historia ya que la imagen se agrega por otro END POINT. Solamente puede existir un personaje con el mismo nombre.\n\nGet ALL: muestra todos los personajes deseados y si quiere aplicar un filtro ese lo indicas por par√°metros y las asociaciones\n\nGet Character: al terminar el endpoint indicas el ID del personaje deseado y este te trae todos los campos de la base de datos y las asociaciones\n\nDelete: elimina un personaje deseado solo ingresando el ID por el END POINT. solamente puede hacerlo el admin.\n\nUpdate: actualiza el personaje deseado y se le pasa el ID por el END POINT y los par√°metros actualizar por el body que pueden ser cualquiera."
		},
		{
			"name": "Movie",
			"item": [
				{
					"name": "Associate",
					"item": [
						{
							"name": "Associate",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/api/movies/124/characters/174/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"movies",
										"124",
										"characters",
										"174",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Save Movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\":\"Mickey Mouse\",\r\n    \"creationDate\":\"2022-01-01\",\r\n    \"calification\":10,\r\n    \"genderType\":\"SCIENCE_FICTION\",\r\n    \"contentType\":\"MOVIE\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/movies/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"movies",
								""
							],
							"query": [
								{
									"key": "id",
									"value": "{{moviesId}}",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Movie",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\":\"Vengadores 42\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/movies/54",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"movies",
								"54"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get ALL Movies",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://localhost:3000/api/movies?filter[creationDate]=2022-01-01&options[order]=title;ASC",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"movies"
							],
							"query": [
								{
									"key": "filter[title]",
									"value": "ce",
									"disabled": true
								},
								{
									"key": "filter[calification]",
									"value": "10",
									"disabled": true
								},
								{
									"key": "filter[creationDate]",
									"value": "2022-01-01"
								},
								{
									"key": "options[offser]",
									"value": "0",
									"disabled": true
								},
								{
									"key": "options[limit]",
									"value": "10",
									"disabled": true
								},
								{
									"key": "options[order]",
									"value": "title;ASC"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Movie",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:3000/api/movies/104",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"movies",
								"104"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Movie",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://localhost:3000/api/movies/4",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"movies",
								"4"
							]
						}
					},
					"response": []
				}
			],
			"description": "EL token generado una vez que te loggeas como comente se guarda autom√°ticamente no es necesario insertarlo en ning√∫n lado, los ID que quieran ver los tienen que indicar por medio de los endpoint\n\nLas asociaciones las realiza el admin una vez creado los personajes y pel√≠culas.\n\nSave Movie: sirve para poder salvar las pel√≠culas deseadas, los par√°metros obligatorios que se env√≠an por Body( calification y title) son el genero y tipo (Movie o Serie) que ya se crearon con anterioridad en la base de datos, si se guarda uno fuera de esta base de datos da error y ya que la imagen se agrega por otro END POINT. Los t√≠tulos agregados son √∫nicos no se pueden repetir.\n\nGet ALL: muestra todas las pel√≠culas deseados y si quiere aplicar un filtro ese lo indicas por par√°metros y las asociaciones\n\nGet Movie: al terminar el endpoint indicas el ID del la pelicula deseada y este te trae todos los campos de la base de datos y las asociaciones\n\nDelete: elimina una pel√≠cula deseado solo ingresando el ID por el END POINT.Solamente puede hacerlo el admin.\n\nUpdate: actualiza la pel√≠cula deseado y se le pasa el ID por el END POINT y los par√°metros actualizar por el body en este campo puede actualizar cualquier campo de la pel√≠cula"
		},
		{
			"name": "Image",
			"item": [
				{
					"name": "Upload Image Character",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"type": "file",
									"src": "/C:/Users/romer/OneDrive/Escritorio/CV.jpg"
								},
								{
									"key": "id",
									"value": "34",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:3000/api/characters/image",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"characters",
								"image"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload Image Movie",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"type": "file",
									"src": "/C:/Users/romer/OneDrive/Escritorio/images.jpg"
								},
								{
									"key": "id",
									"value": "34",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:3000/api/movies/image",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"movies",
								"image"
							]
						}
					},
					"response": []
				}
			],
			"description": "Utilizo la nube de Amazon para poder practicar ya que es muy requerido, subo la imagen a este servidor creo el link por medio de la programaci√≥n y este se guarda en la pel√≠cula o personaje deseado\n\nSe indica por medio de bodyu(form-data) se sube la foto deseada y a que ID pertenece."
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "Authorization",
				"type": "string"
			},
			{
				"key": "value",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}